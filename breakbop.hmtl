<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Gamedev Canvas Workshop</title>
    <style>
    	* { padding: 0; margin: 0; }
    	canvas { background: #eee; display: block; margin: 0 auto; }
    </style>
</head>
<body>
<input type="text" id="text" value="2+2">
<canvas id="myCanvas" width="480" height="320"></canvas>

<script>
	// JavaScript code goes here
    
    var ptext = document.getElementById("text").value;
    var grammar =  
    [   {   head : { type: "non-terminal", val:"SUM"}
        ,   body : [ {type: "non-terminal", val:"NUM"}
                   , {type: "str-lit", val: "+"} 
                   , {type: "non-terminal", val:"NUM"}
                   ]
        }
    ,   {   head : { type: "non-terminal", val:"NUM"}
        ,   body : [ {type: "str-lit", val: "2"} 
                   ]
        }
    ];
    function Grammar (rules){
        this.rules = rules;
    }
    ruleitem = {type: String, val: "stringlit o rulename"};
    exitem = {rule: "S", start: 0, done: [] }
    
    
    
    
/*
{   var qwe = 1;
;   var canvas = document.getElementById("myCanvas");
;   var ctx = canvas.getContext("2d");
;   var ballRadius = 10;
;   var innerTop = 0;//10;
;   var innerBottom = canvas.height;// 310;
;   var innerLeft = 0;//+border;
;   var innerRight = canvas.width;//-border;
;   var Pos = 
            [innerLeft + (innerRight-innerLeft)/8
            ,innerLeft + 3*(innerRight-innerLeft)/8
            ,innerLeft + 5*(innerRight-innerLeft)/8
            ,innerLeft + 7*(innerRight-innerLeft)/8
            ]
;   var paddleHeight = 10;
;   var paddleWidth = canvas.width/4;
;   var paddlePos = 1;
;   var rightPressed = false;
;   var leftPressed = true;
;   var downPressed = false;
;
;   var g = -0.0000003;
;
;   var balls = [];
;   var T =  Date.now();
;   function now(){ return Date.now()-T};
;   var next = 2500;
;
;   var score = 0;
;   var lives = 3;
;   
;   function keyDownHandler(e) 
    {   if(e.keyCode == 39) 
        {   rightPressed = true;
        ;   leftPressed = false;
        ;   downPressed = false;
        }
        else if(e.keyCode == 37) 
        {   leftPressed = true;
        ;   rightPressed = false;
        ;   downPressed = false;
        }
        else if(e.keyCode == 40) 
        {   downPressed = true;
        ;   rightPressed = false;
        ;   leftPressed = false;
        }
    ;   //console.log(e.keyCode,leftPressed,downPressed,rightPressed,paddlePos)
    }
;   
;   document.addEventListener("keydown", keyDownHandler, false);
;
}

function buildBall(pos,t0)
{   var h = (Math.random()*2/3 + 1/3);
;   var v = Math.sqrt(-2 * g * h );
;   var t1 = t0 + 2*v/(-g);
;   return  { "pos":pos
            , "t0":t0
            , "t1":t1
            , "pp": function (t){return (t > t1)}
            , "x" : function (t){return (t-t0)/(t1-t0)*canvas.width/4  + (pos-1)*canvas.width/4 + canvas.width/8}
            , "y" : 
                function (t)
                {   //var t =  now()-t0
                ;   return (1-((t-t0)*v + ((t-t0)*(t-t0)/2)*g)) * (canvas.height - paddleHeight)
                }
            }
}
function spawn() 
{   var t0 =  now();
;   balls.push( buildBall(1,t0) );
}

function drawScore() 
{   ctx.font = "16px Arial";
;   ctx.fillStyle = "#0095DD";
;   ctx.fillText("Score: "+score, 8, 20);
}
function drawLives() 
{   ctx.font = "16px Arial";
;   ctx.fillStyle = "#0095DD";
;   ctx.fillText("Lives: "+lives, canvas.width-65, 20);
}
function drawPaddle()
{   var top = canvas.height-paddleHeight
;   var bottom = canvas.height
;   var left = canvas.width*(paddlePos/4)
;   var right = canvas.width*((1+paddlePos)/4)
;   ctx.beginPath();
;   ctx.rect( 0, top, canvas.width, (bottom-top)/3);
;   ctx.fillStyle = "#00BBFE";
;   ctx.fill();
;   ctx.closePath();
;   ctx.beginPath();
;   ctx.rect( left, top, right-left, bottom-top);
;   ctx.fillStyle = "#0095DD";
;   ctx.fill();
;   ctx.closePath();
}
function drawBalls(frameTime)
{   function dB(q)
    {   var x = q.x(frameTime);
    ;   var y = q.y(frameTime); //if (qwe) {console.log(x,y)};
    ;   ctx.beginPath(); //console.log()
    ;   ctx.arc(x, y-paddleHeight, paddleHeight, 0, Math.PI*2);
    ;   ctx.fillStyle = "#0095DD";
    ;   ctx.fill();
    ;   ctx.closePath();
    }
;   balls.map(dB)
}

function draw(frameTime) 
{   ctx.clearRect(0, 0, canvas.width, canvas.height);
;   drawScore();
;   drawLives();
;   drawPaddle(); 
;   drawBalls(frameTime)
}

function updateBall(frameTime)
{   return function(ball0)
    {   var ball1 = buildBall(ball0.pos + 1,ball0.t1);
    ;   if (frameTime > ball0.t1) 
        {   return ball1
        }
        else 
        {   return ball0
        }
    }
}



function checkBounce(frameTime)
{   return function(ball)
    {   
    ;   var test1 = (frameTimes.slice(-2)[0] <= ball.t1)
    ;   var test2 = (frameTimes.slice(-1)[0] >= ball.t1)
    ;   var test3 = (paddlePos === ball.pos)
    ;   return (test1 && test2) && (! test3)
    }
}
function update(frameTime) 
{   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;    
;   if (leftPressed)
    {   //paddlePos = 1
    ;   paddlePos--;
    ;   leftPressed = false;
    }
;   if (downPressed)
    {   paddlePos = 2;
    ;   downPressed = false;
    }
;   if (rightPressed)
    {   paddlePos++;
    ;   rightPressed = false;
    }
    if (paddlePos < 1)
    {   paddlePos = 1;
    }
    if (paddlePos >3)
    {   paddlePos = 3;
    }
;   function isTrue(x){return x === true};
;   lost = balls.map(checkBounce(frameTime)).some(isTrue); 
;
;   if (lost){gameover()};
;
;   if ( now()>next) 
    {   next = next + 3500;
    ;   spawn();
    }   
;    
;
;   balls = balls.map(updateBall(frameTime));
;   balls = balls.filter(function(b){if (b.pos < 4){return true}else {score++;return false}})
}


frameTimes=[];
function frame() 
{   var frameTime = now()
;   frameTimes.push(frameTime)
//;   console.log("newFrame!!!!!: "+frameTime)
;   update(frameTime);
;   draw(frameTime);
;   requestAnimationFrame(frame);
}


spawn();
frame();



//
// 

function  gameover()
{   lives--;
    balls = [];
    spawn();
    if (lives <0)
    {   alert("YOU LOSE, CONGRATS!");
    ;   document.location.reload();
    }
}
// 
// 
// 
// 


*/



</script>

</body>
</html>
